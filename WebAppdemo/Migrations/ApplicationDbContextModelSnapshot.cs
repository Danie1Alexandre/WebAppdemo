// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppdemo.Data;

namespace WebAppdemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppdemo.Data.CityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryID = 1,
                            Name = "NewYork"
                        },
                        new
                        {
                            Id = 2,
                            CountryID = 2,
                            Name = "LosAngeles"
                        },
                        new
                        {
                            Id = 3,
                            CountryID = 3,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 4,
                            CountryID = 4,
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("WebAppdemo.Data.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Usa"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Usa"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        });
                });

            modelBuilder.Entity("WebAppdemo.Data.PeopleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Neo",
                            PhoneNumber = "05199999"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Mr.Smith",
                            PhoneNumber = "08197777"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Name = "Morpheus",
                            PhoneNumber = "07198888"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            Name = "Trinity",
                            PhoneNumber = "071234986"
                        });
                });

            modelBuilder.Entity("WebAppdemo.Data.CityModel", b =>
                {
                    b.HasOne("WebAppdemo.Data.CountryModel", "Country")
                        .WithMany("Cyties")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAppdemo.Data.PeopleModel", b =>
                {
                    b.HasOne("WebAppdemo.Data.CityModel", "City")
                        .WithMany("People")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
